<!DOCTYPE html>
<html ng-app="demo">
<head>
    <title>Example</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.20/angular.min.js"></script>
    <script type="text/javascript">
        var myApp = angular.module("demo", []);

        myApp.controller("demoCtrl", function ($scope, $http) {
            $http.get("todo.json").then(function (response) {
                $scope.todos = response.data;
            }, function () {
                $scope.todos = [{ action: "Error" }];
            }).then(function () {
                $scope.todos.push({ action: "Request Complete" });
            });
        });
    </script>
</head>
<body ng-controller="demoCtrl">
    <div class="panel">
        <h1>To Do</h1>
        <table class="table">
            <tr><td>Action</td><td>Done</td></tr>
            <tr ng-repeat="item in todos">
                <td>{{item.action}}</td>
                <td>{{item.done}}</td>
            </tr>
        </table>
    </div>

    <p>
        All three promise methods return other promise objects, allowing asynchronous tasks to be chained together in sequence.
    </p>
    <p>
        Here I have used the then method twice, the first time to handle the response from the call to the $http.get
        method and again to register a function that will be invoked afterward.
    </p>
</body>
</html>